"""empty message

Revision ID: fa0b8e152a2c
Revises: 
Create Date: 2021-07-29 22:32:07.246238

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fa0b8e152a2c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codigo', sa.BigInteger(), nullable=False),
    sa.Column('codigo_produto', sa.BigInteger(), nullable=False),
    sa.Column('registro', sa.BigInteger(), nullable=False),
    sa.Column('numero_registro', sa.BigInteger(), nullable=False),
    sa.Column('numero_processo', sa.BigInteger(), nullable=False),
    sa.Column('tipo_produto', sa.Integer(), nullable=False),
    sa.Column('nome_comercial', sa.String(length=128), nullable=False),
    sa.Column('codigo_bula_paciente', sa.String(length=178), nullable=True),
    sa.Column('codigo_bula_profissional', sa.String(length=178), nullable=True),
    sa.Column('categoria_regulatoria', sa.String(length=32), nullable=False),
    sa.Column('atc', sa.String(length=128), nullable=True),
    sa.Column('cnpj', sa.BigInteger(), nullable=True),
    sa.Column('razao_social', sa.String(length=128), nullable=True),
    sa.Column('apresentacao', sa.String(length=200), nullable=False),
    sa.Column('formas_farmaceuticas', sa.String(length=128), nullable=True),
    sa.Column('principios_ativos', sa.String(length=1300), nullable=True),
    sa.Column('restricao_prescricao', sa.String(length=140), nullable=True),
    sa.Column('restricao_uso', sa.String(length=128), nullable=True),
    sa.Column('tarja', sa.String(length=32), nullable=True),
    sa.Column('apresentacao_fracionada', sa.Boolean(), nullable=True),
    sa.Column('medicamento_referencia', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('codigo')
    )
    op.create_table('pharmacist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('whatsapp_number', sa.String(), nullable=False),
    sa.Column('profile_pic_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('whatsapp_number')
    )
    op.create_table('profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('cpf', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('permissions', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('symptom',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('medication_inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('medication_id', sa.Integer(), nullable=False),
    sa.Column('inventory', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['medication_id'], ['medication.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('medication_id', 'profile_id')
    )
    op.create_table('medication_taken',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('medication_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('updated_timestamp', sa.DateTime(), nullable=False),
    sa.Column('original_timestamp', sa.DateTime(), nullable=False),
    sa.Column('taken', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['medication_id'], ['medication.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_symptom',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('sympton_id', sa.Integer(), nullable=False),
    sa.Column('intensity', sa.Integer(), nullable=False),
    sa.Column('submited_datetime', sa.DateTime(), nullable=False),
    sa.Column('marked_datetime', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], ),
    sa.ForeignKeyConstraint(['sympton_id'], ['symptom.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sympton_id', 'profile_id', 'marked_datetime')
    )
    op.create_table('scheduled_profile_medication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('medication_id', sa.Integer(), nullable=False),
    sa.Column('cron_schedule', sa.String(length=32), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medication_id'], ['medication.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cpf', sa.BigInteger(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=False),
    sa.Column('member_since', sa.DateTime(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('user_access_profile',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('is_owner', sa.Boolean(), nullable=False),
    sa.Column('notifications_on', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'profile_id'),
    sa.UniqueConstraint('user_id', 'profile_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_access_profile')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('scheduled_profile_medication')
    op.drop_table('profile_symptom')
    op.drop_table('medication_taken')
    op.drop_table('medication_inventory')
    op.drop_table('symptom')
    op.drop_table('role')
    op.drop_table('profile')
    op.drop_table('pharmacist')
    op.drop_table('medication')
    # ### end Alembic commands ###
